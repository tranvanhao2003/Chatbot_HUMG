import gradio as gr
from configs.load_config import LoadConfig
from source.chat import chat_with_history

APP_CFG = LoadConfig()

def reset_conversation():
    return [("", "Xin ch√†o! üòä Em l√† Bot VCC, tr·ª£ l√Ω mua sƒÉm t·∫°i VCC s·∫µn s√†ng t∆∞ v·∫•n cho anh/ch·ªã v·ªÅ c√°c s·∫£n ph·∫©m b√™n em. R·∫•t vui ƒë∆∞·ª£c h·ªó tr·ª£ anh/ch·ªã h√¥m nay! Ch√∫c anh/ch·ªã m·ªôt ng√†y tuy·ªát v·ªùi! üòä")], []

def recommend_text(text, chatbot, history):
    updated_chatbot, response = chat_with_history(text, history)
    return gr.update(value=text), response

with gr.Blocks(css="""
    #chatbot { 
        height: 1000px; 
        overflow-y: auto; 
        border: 1px solid #ddd; 
        border-radius: 15px; 
        padding: 20px;
        background-color: #f7f7f7;
    }
    #chatbot .user, #chatbot .bot { 
        padding: 10px 15px; 
        border-radius: 20px; 
        display: inline-block;
    }
    #chatbot .user { 
        background-color: #1E90FF; 
        color: black;
        float: right;
    }
    #chatbot .bot { 
        background-color: #F0F8FF; 
        color: black;
        float: left;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    #chat-header {
        text-align: center;
        padding: 20px;
        background-color: #1E90FF;
        color: white;
        border-radius: 15px 15px 0 0;
        margin-bottom: 20px;
    }
    #msg-box {
        border-radius: 20px;
        border: 1px solid #ddd;
    }
    #send-btn, #reset-btn, #clear-btn {
        border-radius: 20px;
    }
    .button-row {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }
""") as demo:
    gr.HTML("""
    <div id="chat-header">
        <h1 style="color: #000000">üí¨ Chatbot t∆∞ v·∫•n tuy·ªÉn sinh Tr∆∞·ªùng ƒë·∫°i h·ªçc M·ªè-ƒê·ªãa ch·∫•t</h1>
        <p style="color: #000000">H√£y ƒë·∫∑t c√¢u h·ªèi, t√¥i s·∫Ω c·ªë g·∫Øng tr·∫£ l·ªùi b·∫°n!</p>
    </div>
    """)
    
    chatbot = gr.Chatbot(
        [("", "Xin ch√†o! üòä Em l√† Bot HUMG, tr·ª£ l√Ω t∆∞ v·∫•n tuy·ªÉn sinh t·∫°i ƒê·∫°i h·ªçc M·ªè - ƒê·ªãa ch·∫•t s·∫µn s√†ng t∆∞ v·∫•n cho anh/ch·ªã v·ªÅ c√°c ng√†nh h·ªçc t·∫°i tr∆∞·ªùng. R·∫•t vui ƒë∆∞·ª£c h·ªó tr·ª£ anh/ch·ªã h√¥m nay! Ch√∫c anh/ch·ªã m·ªôt ng√†y tuy·ªát v·ªùi! üòä")],
        elem_id="chatbot",
        bubble_full_width=False,
        avatar_images=("images/avt_user.png", "images/bot.png"),
    )

    history = []  # Initialize the history list
    
    with gr.Row():
        txt = gr.Textbox(
            show_label=False,
            placeholder="Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n ·ªü ƒë√¢y...",
            elem_id="msg-box"
        )
        submit_btn = gr.Button("G·ª≠i", elem_id="send-btn")

    txt.submit(lambda text, _: chat_with_history(text, history), [txt, chatbot], [txt, chatbot])
    submit_btn.click(lambda text, _: chat_with_history(text, history), [txt, chatbot], [txt, chatbot])

    with gr.Row(elem_classes="recommend-row"):
        recommend_1 = gr.Button("Gi·ªõi thi·ªáu cho t√¥i ng√†nh c√¥ng ngh·ªá th√¥ng tin")
        recommend_2 = gr.Button("T√¥i mu·ªën xem h·ªçc ph√≠ ng√†nh k·∫ø to√°n")
        recommend_3 = gr.Button("ƒêi·ªÉm x√©t tuy·ªÉn ng√†nh qu·∫£n tr·ªã kinh doanh l√† bao nhi√™u?")
        recommend_4 = gr.Button("So s√°nh ng√†nh c√¥ng ngh·ªá th√¥ng tin v√† c√¥ng ngh·ªá th√¥ng tin ch·∫•t l∆∞·ª£ng cao")

    recommend_1.click(lambda: recommend_text('Gi·ªõi thi·ªáu cho t√¥i ng√†nh c√¥ng ngh·ªá th√¥ng tin', chatbot, history), outputs=[txt, chatbot])
    recommend_2.click(lambda: recommend_text('T√¥i mu·ªën xem h·ªçc ph√≠ ng√†nh k·∫ø to√°n', chatbot, history), outputs=[txt, chatbot])
    recommend_3.click(lambda: recommend_text('ƒêi·ªÉm x√©t tuy·ªÉn ng√†nh qu·∫£n tr·ªã kinh doanh l√† bao nhi√™u?', chatbot, history), outputs=[txt, chatbot])
    recommend_4.click(lambda: recommend_text('So s√°nh ng√†nh c√¥ng ngh·ªá th√¥ng tin v√† c√¥ng ngh·ªá th√¥ng tin ch·∫•t l∆∞·ª£ng cao', chatbot, history), outputs=[txt, chatbot])

    with gr.Row(elem_classes="button-row"):
        clear = gr.Button("X√≥a tin nh·∫Øn", elem_id="clear-btn")
        reset = gr.Button("Reset cu·ªôc tr√≤ chuy·ªán", elem_id="reset-btn")

    clear.click(lambda: None, None, chatbot, queue=False)
    reset.click(reset_conversation, outputs=[chatbot, txt])

demo.launch(share=True)
